% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reshape.R
\name{super_spread}
\alias{super_spread}
\title{Spread key-values pairs across multiple columns.}
\usage{
super_spread(data, key, ..., name_order = "key_first", sep = "_",
  fill = NA, convert = FALSE, drop = TRUE)
}
\arguments{
\item{data}{A data frame.}

\item{key}{Column names, \emph{unquoted,} passed in using \code{\link[tidyselect]{vars_select}}.
Accepts \code{\link[dplyr]{select_helpers}}. To specify multiple key columns
all by name, group unquoted variable names using \code{\link[base]{c}}.}

\item{...}{A selection of columns containing values to be spread.
again, unquoted. Accepts \code{\link[dplyr]{select_helpers}}. Variable names
do not need to be grouped using \code{\link[base]{c}}; all names passed in
as \code{...} are assumed to be value columns.}

\item{name_order}{Which identifier comes first in final colname?
Choose \code{"key_first"} or \code{"value_first"}. Defaults to \code{"key_first"}.}

\item{sep}{Separator to use between values, ultimately ending up in colnames.
Passed to \code{\link[tidyr]{unite}}.}

\item{fill}{If set, missing values will be replaced with this value. Note
that there are two types of missingness in the input: explicit missing
values (i.e. \code{NA}), and implicit missings, rows that simply aren't
present. Both types of missing value will be replaced by \code{fill}.}

\item{convert}{If \code{TRUE}, \code{\link[=type.convert]{type.convert()}} with \code{asis =
  TRUE} will be run on each of the new columns. This is useful if the value
column was a mix of variables that was coerced to a string. If the class of
the value column was factor or date, note that will not be true of the new
columns that are produced, which are coerced to character before type
conversion.}

\item{drop}{If \code{FALSE}, will keep factor levels that don't appear in the
data, filling in missing combinations with \code{fill}.}
}
\value{
A data frame, "fully" spread by all indicated columns.
}
\description{
Spread key-values pairs, where one key maps analogously onto multiple values,
into across multiple columns. Equivalent to calling \code{\link[tidyr]{spread}} separately
for dataframes with the same key and different values,
and joining them column-wise back into one dataframe.
}
\examples{
data <- expand.grid(
id = 1L:10L,
condition = c("a", "b"),
value_1 = 1L,
value_2 = 0L)

super_spread(data, condition, value_1:value_2)
}
